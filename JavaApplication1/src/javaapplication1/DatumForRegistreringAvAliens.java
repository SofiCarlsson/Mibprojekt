/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaapplication1;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author oliviacleve
 */
public class DatumForRegistreringAvAliens extends javax.swing.JFrame {

    private InfDB idb;
    /**
     * Creates new form DatumForRegistreringAvAliens
     */
    public DatumForRegistreringAvAliens(InfDB db) {
        idb = db;
        initComponents();
        fyllCbDatum1();
        fyllCbDatum2();
    }
    
     private void fyllCbDatum1() {
        String fraga = ("SELECT Registreringsdatum FROM Alien");
                
                ArrayList<String> allaDatum;
                
                try {
                    allaDatum = idb.fetchColumn(fraga);
                    cbDatum1.removeAllItems();
                    for (String Dat1 : allaDatum) {
                        cbDatum1.addItem(Dat1);
                    }
                } catch (InfException UndantagEtt) {
                    JOptionPane.showMessageDialog(null, "Databasfel!");
                    System.out.println("Internt felmeddelande" + UndantagEtt.getMessage());
                }
                catch (Exception UndantagEtt) {
                    JOptionPane.showMessageDialog(null, "Ett fel uppstod!");
                    System.out.println("Internt felmeddelande" + UndantagEtt.getMessage());
                }
    }
     
     private void fyllCbDatum2() {
        String fraga = ("SELECT Registreringsdatum FROM Alien");
                
                ArrayList<String> allaDatumen;
                
                try {
                    allaDatumen = idb.fetchColumn(fraga);
                    cbDatum2.removeAllItems();
                    for (String Dat2 : allaDatumen) {
                        cbDatum2.addItem(Dat2);
                    }
                } catch (InfException UndantagEtt) {
                    JOptionPane.showMessageDialog(null, "Databasfel!");
                    System.out.println("Internt felmeddelande" + UndantagEtt.getMessage());
                }
                catch (Exception UndantagEtt) {
                    JOptionPane.showMessageDialog(null, "Ett fel uppstod!");
                    System.out.println("Internt felmeddelande" + UndantagEtt.getMessage());
                }
    }
    

    
    
    
     private void fylltxtAreaDatumAliens()
    {
         txtAreaVisaDatumen.setText("");
    
        ArrayList<HashMap<String, String>> DatAlien = new ArrayList<HashMap<String, String>>();
        String Datum1 = cbDatum1.getSelectedItem().toString();
        String Datum2 = cbDatum2.getSelectedItem().toString(); 
        try {
            String fraga = "SELECT Alien_ID, Namn FROM Alien WHERE Registreringsdatum BETWEEN '"+ Datum1 + "' AND '"+ Datum2 +"'";
            DatAlien = idb.fetchRows(fraga);
            
            for (HashMap<String, String> Datum : DatAlien) {
                txtAreaVisaDatumen.append(Datum.get("Alien_ID") + "\t");
                txtAreaVisaDatumen.append(Datum.get("Namn") + "\n");

            }
        } catch (InfException UndantagEn) {
                    JOptionPane.showMessageDialog(null, "Databasfel!");
                    System.out.println("Internt felmeddelande" + UndantagEn.getMessage());
                }
                catch (Exception UndantagEn) {
                    JOptionPane.showMessageDialog(null, "Ett fel uppstod!");
                    System.out.println("Internt felmeddelande" + UndantagEn.getMessage());
                }
        
  
        }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHärVisasDatumForRegistrering = new javax.swing.JLabel();
        lblVäljDatumintervall = new javax.swing.JLabel();
        cbDatum1 = new javax.swing.JComboBox<>();
        cbDatum2 = new javax.swing.JComboBox<>();
        txtAreaVisaDatumAliens = new javax.swing.JScrollPane();
        txtAreaVisaDatumen = new javax.swing.JTextArea();
        btnSok = new javax.swing.JButton();
        lblAlien_IDtext = new javax.swing.JLabel();
        lblNamntext = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblHärVisasDatumForRegistrering.setFont(new java.awt.Font("Beirut", 0, 13)); // NOI18N
        lblHärVisasDatumForRegistrering.setText("Här visas alla Aliens registrerade mellan de valda datumen:");

        lblVäljDatumintervall.setText("Välj ett datumintervall för att visa registrerade Aliens");

        txtAreaVisaDatumen.setColumns(20);
        txtAreaVisaDatumen.setRows(5);
        txtAreaVisaDatumAliens.setViewportView(txtAreaVisaDatumen);

        btnSok.setText("Sök");
        btnSok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSokActionPerformed(evt);
            }
        });

        lblAlien_IDtext.setText("Alien ID");

        lblNamntext.setText("Namn");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblVäljDatumintervall)
                            .addComponent(lblHärVisasDatumForRegistrering)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblAlien_IDtext)
                                .addGap(63, 63, 63)
                                .addComponent(lblNamntext))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtAreaVisaDatumAliens)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(cbDatum1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(cbDatum2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnSok))))))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblHärVisasDatumForRegistrering)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(lblVäljDatumintervall)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbDatum2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbDatum1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSok))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAlien_IDtext)
                    .addComponent(lblNamntext))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtAreaVisaDatumAliens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSokActionPerformed
        fylltxtAreaDatumAliens();
    }//GEN-LAST:event_btnSokActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DatumForRegistreringAvAliens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DatumForRegistreringAvAliens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DatumForRegistreringAvAliens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DatumForRegistreringAvAliens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new DatumForRegistreringAvAliens().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSok;
    private javax.swing.JComboBox<String> cbDatum1;
    private javax.swing.JComboBox<String> cbDatum2;
    private javax.swing.JLabel lblAlien_IDtext;
    private javax.swing.JLabel lblHärVisasDatumForRegistrering;
    private javax.swing.JLabel lblNamntext;
    private javax.swing.JLabel lblVäljDatumintervall;
    private javax.swing.JScrollPane txtAreaVisaDatumAliens;
    private javax.swing.JTextArea txtAreaVisaDatumen;
    // End of variables declaration//GEN-END:variables
}
